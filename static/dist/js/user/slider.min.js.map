{"version":3,"file":"slider.min.js","sources":["slider.js"],"sourcesContent":["// ============ HERO SLIDER ============\nclass HeroSlider {\n    constructor(sliderId) {\n        this.slider = document.getElementById(sliderId);\n        if (!this.slider) return;\n        \n        this.slides = this.slider.querySelectorAll('.hero-slide');\n        this.currentSlide = 0;\n        this.totalSlides = this.slides.length;\n        \n        this.prevBtn = document.getElementById('prevSlide');\n        this.nextBtn = document.getElementById('nextSlide');\n        this.dotsContainer = document.getElementById('sliderDots');\n        \n        this.init();\n    }\n    \n    init() {\n        // Create dots\n        this.createDots();\n        \n        // Event listeners\n        if (this.prevBtn) {\n            this.prevBtn.addEventListener('click', () => this.prevSlide());\n        }\n        \n        if (this.nextBtn) {\n            this.nextBtn.addEventListener('click', () => this.nextSlide());\n        }\n        \n        // Auto play\n        this.startAutoPlay();\n        \n        // Pause on hover\n        this.slider.addEventListener('mouseenter', () => this.stopAutoPlay());\n        this.slider.addEventListener('mouseleave', () => this.startAutoPlay());\n        \n        this.dotsContainer.addEventListener('mouseenter', () => this.stopAutoPlay());\n        this.dotsContainer.addEventListener('mouseleave', () => this.startAutoPlay());\n    }\n    \n    createDots() {\n        if (!this.dotsContainer) return;\n        \n        for (let i = 0; i < this.totalSlides; i++) {\n            const dot = document.createElement('button');\n            dot.classList.add('slider-dot');\n            if (i === 0) dot.classList.add('active');\n            \n            dot.addEventListener('click', () => this.goToSlide(i));\n            this.dotsContainer.appendChild(dot);\n        }\n    }\n    \n    goToSlide(index) {\n        // Remove active class from current slide\n        this.slides[this.currentSlide].classList.remove('active');\n        \n        // Update current slide\n        this.currentSlide = index;\n        \n        // Add active class to new slide\n        this.slides[this.currentSlide].classList.add('active');\n        \n        // Update dots\n        this.updateDots();\n    }\n    \n    nextSlide() {\n        const next = (this.currentSlide + 1) % this.totalSlides;\n        this.goToSlide(next);\n    }\n    \n    prevSlide() {\n        const prev = (this.currentSlide - 1 + this.totalSlides) % this.totalSlides;\n        this.goToSlide(prev);\n    }\n    \n    updateDots() {\n        if (!this.dotsContainer) return;\n        \n        const dots = this.dotsContainer.querySelectorAll('.slider-dot');\n        dots.forEach((dot, index) => {\n            if (index === this.currentSlide) {\n                dot.classList.add('active');\n            } else {\n                dot.classList.remove('active');\n            }\n        });\n    }\n    \n    startAutoPlay() {\n        this.autoPlayInterval = setInterval(() => {\n            this.nextSlide();\n        }, 5000);\n    }\n    \n    stopAutoPlay() {\n        clearInterval(this.autoPlayInterval);\n    }\n}\n\n// Initialize hero slider\nconst heroSlider = new HeroSlider('heroSlider');\n\n// ============ COLLECTIONS SLIDER ============\nclass CollectionsSlider {\n    constructor(sliderId) {\n        this.slider = document.getElementById(sliderId);\n        if (!this.slider) return;\n        \n        this.prevBtn = document.getElementById('collectionsPrev');\n        this.nextBtn = document.getElementById('collectionsNext');\n        \n        this.scrollAmount = 430; // slide width + gap\n        \n        this.init();\n    }\n    \n    init() {\n        if (this.prevBtn) {\n            this.prevBtn.addEventListener('click', () => this.scrollPrev());\n        }\n        \n        if (this.nextBtn) {\n            this.nextBtn.addEventListener('click', () => this.scrollNext());\n        }\n        \n        // Update button states on scroll\n        this.slider.addEventListener('scroll', () => this.updateButtons());\n        this.updateButtons();\n    }\n    \n    scrollPrev() {\n        this.slider.scrollBy({\n            left: -this.scrollAmount,\n            behavior: 'smooth'\n        });\n    }\n    \n    scrollNext() {\n        this.slider.scrollBy({\n            left: this.scrollAmount,\n            behavior: 'smooth'\n        });\n    }\n    \n    updateButtons() {\n        const scrollLeft = this.slider.scrollLeft;\n        const maxScroll = this.slider.scrollWidth - this.slider.clientWidth;\n        \n        // Disable prev button at start\n        if (this.prevBtn) {\n            if (scrollLeft <= 0) {\n                this.prevBtn.style.opacity = '0.3';\n                this.prevBtn.style.pointerEvents = 'none';\n            } else {\n                this.prevBtn.style.opacity = '1';\n                this.prevBtn.style.pointerEvents = 'auto';\n            }\n        }\n        \n        // Disable next button at end\n        if (this.nextBtn) {\n            if (scrollLeft >= maxScroll - 10) {\n                this.nextBtn.style.opacity = '0.3';\n                this.nextBtn.style.pointerEvents = 'none';\n            } else {\n                this.nextBtn.style.opacity = '1';\n                this.nextBtn.style.pointerEvents = 'auto';\n            }\n        }\n    }\n}\n\n// Initialize collections slider\nconst collectionsSlider = new CollectionsSlider('collectionsSlider');\n\n// ============ TOUCH SWIPE SUPPORT ============\nfunction addSwipeSupport(element, onSwipeLeft, onSwipeRight) {\n    if (!element) return;\n    \n    let touchStartX = 0;\n    let touchEndX = 0;\n    \n    element.addEventListener('touchstart', (e) => {\n        touchStartX = e.changedTouches[0].screenX;\n    });\n    \n    element.addEventListener('touchend', (e) => {\n        touchEndX = e.changedTouches[0].screenX;\n        handleSwipe();\n    });\n    \n    function handleSwipe() {\n        const swipeThreshold = 50;\n        \n        if (touchEndX < touchStartX - swipeThreshold) {\n            // Swipe left\n            if (onSwipeLeft) onSwipeLeft();\n        }\n        \n        if (touchEndX > touchStartX + swipeThreshold) {\n            // Swipe right\n            if (onSwipeRight) onSwipeRight();\n        }\n    }\n}\n\n// Add swipe support to hero slider\nif (document.getElementById('heroSlider')) {\n    addSwipeSupport(\n        document.getElementById('heroSlider'),\n        () => heroSlider.nextSlide(),\n        () => heroSlider.prevSlide()\n    );\n}\n\n// Add swipe support to collections slider\nif (document.getElementById('collectionsSlider')) {\n    const collectionsSliderElement = document.getElementById('collectionsSlider');\n    addSwipeSupport(\n        collectionsSliderElement,\n        () => collectionsSliderElement.scrollBy({ left: 430, behavior: 'smooth' }),\n        () => collectionsSliderElement.scrollBy({ left: -430, behavior: 'smooth' })\n    );\n}\n\n// ============ KEYBOARD NAVIGATION ============\ndocument.addEventListener('keydown', (e) => {\n    // Only if no input is focused\n    if (document.activeElement.tagName === 'INPUT') return;\n    \n    if (e.key === 'ArrowLeft' && heroSlider) {\n        heroSlider.prevSlide();\n    }\n    \n    if (e.key === 'ArrowRight' && heroSlider) {\n        heroSlider.nextSlide();\n    }\n});\n"],"names":["HeroSlider","constructor","sliderId","this","slider","document","getElementById","slides","querySelectorAll","currentSlide","totalSlides","length","prevBtn","nextBtn","dotsContainer","init","createDots","addEventListener","prevSlide","nextSlide","startAutoPlay","stopAutoPlay","let","i","dot","createElement","classList","add","goToSlide","appendChild","index","remove","updateDots","next","prev","forEach","autoPlayInterval","setInterval","clearInterval","heroSlider","CollectionsSlider","scrollAmount","scrollPrev","scrollNext","updateButtons","scrollBy","left","behavior","scrollLeft","maxScroll","scrollWidth","clientWidth","style","opacity","pointerEvents","collectionsSlider","addSwipeSupport","element","onSwipeLeft","onSwipeRight","touchStartX","touchEndX","e","changedTouches","screenX","collectionsSliderElement","activeElement","tagName","key"],"mappings":"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"}