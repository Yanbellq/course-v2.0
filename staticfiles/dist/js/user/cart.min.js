import showNotification from"./toast.js";class ShoppingCart{constructor(){this.items=this.loadCart(),this.cartSidebar=document.getElementById("cartSidebar"),this.cartToggle=document.getElementById("cartToggle"),this.cartClose=document.getElementById("cartClose"),this.continueShopping=document.getElementById("continueShopping"),this.overlay=document.getElementById("overlay"),this.cartCount=document.getElementById("cartCount"),this.cartItems=document.getElementById("cartItems"),this.cartSubtotal=document.getElementById("cartSubtotal"),this.cartTotal=document.getElementById("cartTotal"),this.init()}init(){this.updateUI(),this.cartToggle&&this.cartToggle.addEventListener("click",()=>this.openCart()),this.cartClose&&this.cartClose.addEventListener("click",()=>this.closeCart()),this.continueShopping&&this.continueShopping.addEventListener("click",()=>this.closeCart()),this.overlay&&this.overlay.addEventListener("click",()=>this.closeCart()),this.setupAddToCartButtons()}setupAddToCartButtons(){document.addEventListener("click",t=>{t.target.classList.contains("btn-add-cart")&&(t={id:(t=t.target).dataset.id,name:t.dataset.name,price:parseFloat(t.dataset.price),image:t.dataset.image,quantity:1},this.addItem(t),showNotification("Product added to cart!"))})}addItem(e){var t=this.items.find(t=>t.id===e.id);t?t.quantity+=1:this.items.push(e),this.saveCart(),this.updateUI()}removeItem(e){this.items=this.items.filter(t=>t.id!==e),this.saveCart(),this.updateUI()}updateQuantity(e,t){var i=this.items.find(t=>t.id===e);i&&(t<=0?this.removeItem(e):(i.quantity=t,this.saveCart(),this.updateUI()))}getTotal(){return this.items.reduce((t,e)=>t+e.price*e.quantity,0)}updateUI(){var t=this.items.reduce((t,e)=>t+e.quantity,0),t=(this.cartCount&&(this.cartCount.textContent=t,this.cartCount.style.display=0<t?"flex":"none"),this.cartItems&&(0===this.items.length?this.cartItems.innerHTML=`
                    <div class="cart-empty">
                        <svg width="80" height="80" viewBox="0 0 80 80" fill="none">
                            <circle cx="40" cy="40" r="38" stroke="#e0e0e0" stroke-width="4"/>
                            <path d="M30 50L50 30M50 50L30 30" stroke="#e0e0e0" stroke-width="4" stroke-linecap="round"/>
                        </svg>
                        <p style='font-size: 15px;'>Your cart is empty</p>
                    </div>
                `:(this.cartItems.innerHTML=this.items.map(t=>`
                    <div class="cart-item" data-id="${t.id}">
                        <div class="cart-item-image">
                            <img src="${t.image}" alt="${t.name}">
                        </div>
                        <div class="cart-item-info">
                            <h4>${t.name}</h4>
                            <div class="cart-item-price">$${t.price.toFixed(2)}</div>
                            <div class="cart-item-quantity">
                                <button class="qty-btn qty-minus" data-id="${t.id}">-</button>
                                <span class="qty-value">${t.quantity}</span>
                                <button class="qty-btn qty-plus" data-id="${t.id}">+</button>
                            </div>
                        </div>
                        <button class="cart-item-remove" data-id="${t.id}">Ã—</button>
                    </div>
                `).join(""),this.setupCartItemButtons())),this.getTotal());this.cartSubtotal&&(this.cartSubtotal.textContent="$"+t.toFixed(2)),this.cartTotal&&(this.cartTotal.textContent="$"+t.toFixed(2))}setupCartItemButtons(){document.querySelectorAll(".cart-item-remove").forEach(e=>{e.addEventListener("click",()=>{var t=e.dataset.id;this.removeItem(t),showNotification("Product removed from cart")})}),document.querySelectorAll(".qty-minus").forEach(i=>{i.addEventListener("click",()=>{let e=i.dataset.id;var t=this.items.find(t=>t.id===e);t&&this.updateQuantity(e,t.quantity-1)})}),document.querySelectorAll(".qty-plus").forEach(i=>{i.addEventListener("click",()=>{let e=i.dataset.id;var t=this.items.find(t=>t.id===e);t&&this.updateQuantity(e,t.quantity+1)})})}openCart(){this.cartSidebar&&this.cartSidebar.classList.add("active"),this.overlay&&this.overlay.classList.add("active"),document.body.style.overflow="hidden"}closeCart(){this.cartSidebar&&this.cartSidebar.classList.remove("active"),this.overlay&&this.overlay.classList.remove("active"),document.body.style.overflow=""}saveCart(){localStorage.setItem("cart",JSON.stringify(this.items))}loadCart(){var t=localStorage.getItem("cart");return t?JSON.parse(t):[]}clearCart(){this.items=[],this.saveCart(),this.updateUI()}}let cart=new ShoppingCart;document.addEventListener("click",t=>{t.target.classList.contains("btn-checkout")&&(0<cart.items.length?alert("Proceeding to checkout...\nTotal: $"+cart.getTotal().toFixed(2)):alert("Your cart is empty!"))});
//# sourceMappingURL=cart.min.js.map
